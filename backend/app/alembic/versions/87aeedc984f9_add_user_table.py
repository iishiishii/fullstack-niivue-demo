"""add User table

Revision ID: 87aeedc984f9
Revises: 2d3cce9607a4
Create Date: 2025-08-21 10:02:36.519340

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '87aeedc984f9'
down_revision = '0347281e50a5'  # Changed from '2d3cce9607a4'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('groups', sa.JSON(), nullable=True),
    sa.Column('pending', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=False),
    sa.Column('scopes', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    # Add owner_id column as nullable first
    op.add_column('scene', sa.Column('owner_id', sa.Uuid(), nullable=True))
    
    # Create a default user and assign all existing scenes to this user
    # Insert a default user if it doesn't exist
    default_user_id = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'  # Fixed UUID for default user
    op.execute(f"""
        INSERT INTO "user" (id, name, admin, hashed_password, last_activity)
        VALUES ('{default_user_id}', 'Default User', false, '$2b$12$defaulthashedpassword', NOW())
        ON CONFLICT (id) DO NOTHING
    """)
    
    # Create test-user for JupyterHub authentication
    test_user_id = 'b1ffcc99-9c0b-4ef8-bb6d-6bb9bd380a22'  # Fixed UUID for test user
    op.execute(f"""
        INSERT INTO "user" (id, name, admin, hashed_password, last_activity, groups, scopes)
        VALUES ('{test_user_id}', 'test-user', false, 'jupyterhub-auth', NOW(), '[]', '["self", "access:services"]')
        ON CONFLICT (id) DO NOTHING
    """)
    
    # Update all existing scenes to have the default user as owner
    op.execute(f"""
        UPDATE scene SET owner_id = '{default_user_id}' WHERE owner_id IS NULL
    """)
    
    # Now make the column non-nullable
    op.alter_column('scene', 'owner_id', nullable=False)
    
    op.create_foreign_key(None, 'scene', 'user', ['owner_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'scene', type_='foreignkey')
    op.drop_column('scene', 'owner_id')
    op.drop_table('user')
    # ### end Alembic commands ###
